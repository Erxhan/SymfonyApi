<?php

namespace Dev\ApiBundle\Repository;
/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
use Dev\ApiBundle\Entity\User;
use Doctrine\ORM\EntityRepository;

class UserRepository extends EntityRepository
{
    public function findAllActive()
    {
        $qb = $this->createQueryBuilder('user')->where('user.enabled = TRUE');
        return $qb->getQuery()->getResult();
    }

    public function findAllWithAvatarAndEnabled()
    {
        $qb = $this->createQueryBuilder('user')
            ->leftJoin('user.avatar', 'avatar')
            ->addSelect('avatar')
            ->where('user.enabled = TRUE');
        return $qb->getQuery()->getResult();
    }

    /**
     * @param int $userID
     * @return User
     */
    public function findOneWithAvatar($userID)
    {
        $qb = $this->createQueryBuilder('user')
            ->leftJoin('user.avatar', 'avatar')
            ->addSelect('avatar')
            ->where('user.id = :userID')
            ->setParameters([
                'userID' => $userID
            ]);
        return $qb->getQuery()->getOneOrNullResult();
    }

    public function findOneByUsername($username)
    {
        $qb = $this->createQueryBuilder('user')
            ->where('username = :username')
            ->setParameters(['username' => $username]);
        return $qb->getQuery()->getOneOrNullResult();
    }

    /**
     * @param $userID
     * @return User
     */
    public function findFriendsByUser($userID)
    {
        $qb = $this->createQueryBuilder('user')
            ->leftJoin('user.friends', 'friends')
            ->addSelect('friends')
            ->where('user.id = :userID')
            ->setParameters(['userID' => $userID]);
        return $qb->getQuery()->getOneOrNullResult();
    }
}
